#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ZeroGallery Python Client
"""

import asyncio
from pathlib import Path
from zerogallery_client import (
    ZeroGalleryClient, 
    ZeroGalleryClientSync,
    CreateAlbumInfo
)


async def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–∏–º–µ—Ä —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–æ–º"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    BASE_URL = "http://localhost:5000"
    ACCESS_TOKEN = "your-access-token"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    async with ZeroGalleryClient(BASE_URL, ACCESS_TOKEN) as client:
        print("üöÄ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ ZeroGallery API...")
        
        # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏
        try:
            version = await client.get_version()
            print(f"‚úÖ –í–µ—Ä—Å–∏—è API: {version}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
            return
        
        # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–ª—å–±–æ–º–æ–≤
        print("\nüìÅ –°–ø–∏—Å–æ–∫ –∞–ª—å–±–æ–º–æ–≤:")
        albums = await client.get_albums()
        for album in albums:
            protected = "üîí" if album.is_protected else "üîì"
            print(f"  {protected} {album.name} (ID: {album.id})")
        
        # 3. –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∞–ª—å–±–æ–º–∞
        print("\nüìù –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∞–ª—å–±–æ–º–∞...")
        new_album = await client.create_album(CreateAlbumInfo(
            name="Test Album from Python",
            description="–¢–µ—Å—Ç–æ–≤—ã–π –∞–ª—å–±–æ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á–µ—Ä–µ–∑ Python API",
            token="secret-token",  # –¢–æ–∫–µ–Ω –¥–ª—è –∑–∞—â–∏—Ç—ã –∞–ª—å–±–æ–º–∞
            allow_remove_data=True
        ))
        print(f"‚úÖ –ê–ª—å–±–æ–º —Å–æ–∑–¥–∞–Ω: {new_album.name} (ID: {new_album.id})")
        
        # 4. –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
        print("\nüì§ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤...")
        
        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏)
        test_files = [
            "test_image1.jpg",
            "test_image2.png",
            "test_video.mp4"
        ]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
        existing_files = [f for f in test_files if Path(f).exists()]
        
        if existing_files:
            # –ó–∞–≥—Ä—É–∑–∫–∞ –æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
            first_file = existing_files[0]
            file_id = await client.upload_file(first_file, new_album.id)
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª {first_file} (ID: {file_id})")
            
            # –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
            if len(existing_files) > 1:
                file_ids = await client.upload_multiple_files(existing_files[1:], new_album.id)
                print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(file_ids)} —Ñ–∞–π–ª–æ–≤")
        else:
            print("‚ö†Ô∏è  –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            # –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
            test_data = b"Test file content from Python"
            file_id = await client.upload_file_data(test_data, "test.txt", new_album.id)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –∏ –∑–∞–≥—Ä—É–∂–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª (ID: {file_id})")
        
        # 5. –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∞–ª—å–±–æ–º–∞
        print("\nüìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∞–ª—å–±–æ–º–∞:")
        album_data = await client.get_album_data(new_album.id)
        for item in album_data:
            size_kb = item.size / 1024
            print(f"  üìÑ {item.name} ({size_kb:.2f} KB) - {item.mime_type}")
            print(f"     –°–æ–∑–¥–∞–Ω: {item.created_datetime}")
        
        # 6. –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
        if album_data:
            print("\nüì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞...")
            download_item = album_data[0]
            
            async def show_progress(percent):
                bar_length = 40
                filled = int(bar_length * percent / 100)
                bar = '‚ñà' * filled + '‚ñë' * (bar_length - filled)
                print(f"\r  [{bar}] {percent:.1f}%", end='', flush=True)
            
            output_path = f"downloaded_{download_item.name}"
            await client.download_data(download_item.id, output_path, show_progress)
            print(f"\n‚úÖ –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {output_path}")
            
            # 7. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ–≤—å—é (–¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)
            if download_item.mime_type.startswith('image/'):
                preview_path = f"preview_{download_item.name}"
                await client.save_preview(download_item.id, preview_path)
                print(f"‚úÖ –ü—Ä–µ–≤—å—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {preview_path}")
        
        # 8. –†–∞–±–æ—Ç–∞ —Å –≤–∏–¥–µ–æ (Range requests)
        video_items = [item for item in album_data if item.mime_type.startswith('video/')]
        if video_items:
            print("\nüé• –†–∞–±–æ—Ç–∞ —Å –≤–∏–¥–µ–æ...")
            video = video_items[0]
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—ã–π –º–µ–≥–∞–±–∞–π—Ç –≤–∏–¥–µ–æ
            chunk, headers = await client.get_video_stream(
                video.id, 
                range_start=0, 
                range_end=1024*1024
            )
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω —Ñ—Ä–∞–≥–º–µ–Ω—Ç –≤–∏–¥–µ–æ: {len(chunk)} –±–∞–π—Ç")
            print(f"   Content-Range: {headers['Content-Range']}")
        
        # 9. –û—á–∏—Å—Ç–∫–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        print("\nüßπ –û—á–∏—Å—Ç–∫–∞...")
        cleanup = input("–£–¥–∞–ª–∏—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ? (y/n): ")
        if cleanup.lower() == 'y':
            # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
            for item in album_data:
                await client.delete_data(item.id)
                print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: {item.name}")
            
            # –£–¥–∞–ª–µ–Ω–∏–µ –∞–ª—å–±–æ–º–∞
            await client.delete_album(new_album.id)
            print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω –∞–ª—å–±–æ–º: {new_album.name}")
        
        print("\n‚ú® –ì–æ—Ç–æ–≤–æ!")


def sync_quick_example():
    """–ü—Ä–æ—Å—Ç–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä"""
    print("üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä...")
    
    with ZeroGalleryClientSync("http://localhost:5000", "your-token") as client:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–µ—Ä—Å–∏–∏
        version = client.get_version()
        print(f"–í–µ—Ä—Å–∏—è API: {version}")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–ª—å–±–æ–º–æ–≤
        albums = client.get_albums()
        print(f"–ù–∞–π–¥–µ–Ω–æ –∞–ª—å–±–æ–º–æ–≤: {len(albums)}")
        
        # –ë—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
        if albums:
            album = albums[0]
            
            # –ó–∞–≥—Ä—É–∑–∫–∞
            with open("test.txt", "w") as f:
                f.write("Test content")
            
            file_id = client.upload_file("test.txt", album.id)
            print(f"–ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª ID: {file_id}")
            
            # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ
            client.download_data(file_id, "downloaded_test.txt")
            print("–§–∞–π–ª —Å–∫–∞—á–∞–Ω")
            
            # –£–¥–∞–ª–µ–Ω–∏–µ
            client.delete_data(file_id)
            print("–§–∞–π–ª —É–¥–∞–ª–µ–Ω")


if __name__ == "__main__":
    # –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞
    print("ZeroGallery Python Client - –ü—Ä–∏–º–µ—Ä—ã")
    print("1. –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)")
    print("2. –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä")
    
    choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º (1/2): ")
    
    if choice == "2":
        sync_quick_example()
    else:
        asyncio.run(main())
